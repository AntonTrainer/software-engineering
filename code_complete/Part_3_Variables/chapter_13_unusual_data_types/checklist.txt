Considerations in Using Unusual Data Types

Structures
- Have you used structures instead of naked variables to organize and
    manipulate groups of related data
- Have you considered creating a class as an alternative to a structure?

Global Data
- Are all variables local or a of class scope unless they absolutely 
    need to be global?
- Do variable naming conventions differentiate among local, class and
    global data?
- Are all global variables documented?
- Is the code free of mammoth objects containing a ton of random data
    thats passed to every routine?
- Are access routines used instead of global data?
- Are access routines and data organized into classes?
- Do access routines provide a level of abstraction beyond the 
    underlying data type implementations?
- Are all related access routines at the same level of abstraction?

------------------------------------------------------------------------
Key Points

- Structures can help make programs less complicated, easier to 
    understand, and easier to maintain
- Whenever you consider using a structure, consider whether a class 
    would work better
- Avoid gloval variables, not just because theyre dangerous, but 
    because you can replace them with something better
- If you cant abvoid global variables, work with them through access
    routines. Access routines give you everything that global variables
    give you, and more
