Major Construction Practices

Coding
- Have you defined how much design will be done up front and how much 
    will be done at the keyboard, while the code is being written?
- Have you defined coding conventions for names, comments, and layout?
- Have you defined specific coding practices that are implied by the 
    architecture, such as how error conditions will be handled, how
    security will be addressed, what conventions will be used for class
    interfaces, what standards will apply to reused code, how much to
    consider performance while coding, and so on?
- Have you identified your location on the technology wave and adjusted
    your approach to match? If nevessary, have you identified how you 
    will program into the language, rather than being limited by 
    programming in it?

Teamwork
- Have you defined an integration procedure - that is, have you defined
    the specific steps a programmer must go through before checking
    code into the master sources?
- Will programmers program in pairs, or individually, or some 
    combination of the two?

Quality Assurance
- Will programmers write test cases for their code before writing the
    code itself?
- Will programmers write unit tests for their code regardless of
    whether they write them first or last?
- Will programmers step through their code in the debbugger before they
    check it in?
- Will programmers integration -test their code before they check it in?
- Will programmers review or inspect each other's code?

Tools
- Have you selected a revision control tool?
- Have you selected a language and language version or compiler version?
- Have you selected a framework like .NET or explicitly decided not to
    use a framework?
- Have you decided whether to allow use of nonstandard language 
    features?
- Have you identified and acquired other tools youll be using - editor,
    refactoring tool, debugger, test framework, syntax checker, and so 
    on?

------------------------------------------------------------------------
Key Points

- Every programming language has strengths and weaknesses. Be aware of
    the specific strengths and weaknesses of the language youre using
- Establish programming conventions before you begin programming. Its
    nearly impossible to change code to match them much later
- More construction practices exist than you can use on any single
    project. Consciously choose the practices that are best suited to
    your project
- Ask yourself whether the programming practices youre using are 
    a response to the programming language youre using or controlled by
    it. Remember to program INTO the language, rather than programming
    in it.
- Your position on the technology wave determinse what approach will be
    effective - or even possible. Identify where you are on the 
    technology wave, and adjust your plans and expectations accordingly.
