Cont.

Hierarchy:

    Future improvements (top)
    System testing
    Construction
    Architecture
    Requirements
    Problem Defintion (bottom)

Problem Definition = make sure you know what youre aiming at before
    you shoot

Requirements = detailed description of what the software system is
    supposed to do
    - Official documentation is huge too
    - Without good requirements, you can have the right general 
    problem but miss the mark on specific aspects of the problem
    - Also, like everything else, the deeper into the project life
    cycle, the cost to fix continues to grow
    - "Requirements are like water. They're easier to build on when 
    theyre frozen"
    - Also, remember the customer isnt stupid, they just havent spent
    as much time digging through implementation issues as you have.
    Imagine if you looked at their area of expertise and were expected
    to be the smartest person in the room about it?
    - Development is like driving, and requirements are the map(ish)
    - MAKE SURE CLIENTS KNOW THE COST OF REQUIREMENTS CHANGES
        --> "Since its not in the requirements document let me pull
            together a revised 'schedule' and 'cost' estimate so you
            can decide if you want to do it now or later"
        --> 'schedule' and 'cost' are scary words lmao
    - refer back to the business case to keep reqs under control

Architecture = design of constraints that apply system wide
    - Quality of architecture determines the conceptual integrity of
        the system. This in turn determines the ultimate quality of the
        system.
    - Without good software architecture, you may have the right problem
        but the wrong solution. It may be impossible to have successful
        construction.

Amount of Time to Spend on Upstream Prerequisities
Typcially, for Requirements, Architecture and up-front planning
    10-20% of effort
    20-30% of schedule

Overall, get the prereqs and turn over every stone in creating a simple
explanation(architecture) to describe the system solution